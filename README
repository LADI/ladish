========================
  LADI Session Handler 
========================

http://ladish.org/

LADI Session Handler or simply ladish is a session management system
for JACK applications on GNU/Linux. Its aim is to allow you to have
many different audio programs running at once, to save their setup,
close them down and then easily reload the setup at some other
time. ladish doesn't deal with any kind of audio or MIDI data itself;
it just runs programs, deals with saving/loading (arbitrary) data and
connects JACK ports together. It can also be used to move entire
sessions between computers, or post sessions on the Internet for
download.

ladish has GUI frontend, gladish, based on lpatchage (LADI Patchage)
and the ladish_control command line app for headless operation. LADI
Tools is set of apps that interface with ladish, JACK server and
a2jmidid

ladish requires D-Bus and JACK compiled with D-Bus support.

LADI Session Handler is rewrite of LASH.

Features:
 * Save and restore sets of JACK (audio and MIDI) enabled
   applications.
 * Provide JACK clients with virtual hardware ports, so projects can
   be transfered (or backups restored) between computers running
   different hardware and backups. 
 * Don't require session handling library to be used. There is no need
   of such library for restoring connections between JACK clients.
 * Flow canvas based GUI. Positions of elements on the canvas are
   saved/restored.
 * Allow clients to use external storage to save their state. This
   includes storing internal state to non-filesystem place like memory
   of a hardware synth. This also includes storing client internal
   state (client project data) in a way that is not directly bound to
   ladish project.

Some of the following features may be already implemented
as part of KXStudio project [1] by its frontend GUI applications
for ladish backend services. In particular check Claudia [2],
Claudia-Launcher [3] and Cadence [4].

Planned features:
 * Import/export operations, as opposed to save/load. Save/load
   operate in current system and may cause saving data outside of
   project itself (external storage). Import/export uses/produces
   "tarball" suitable for transferring session data over network to
   other computer or storing it in a backup archive.
 * Hierarchical or tag-based organization of projects.
 * List of JACK applications. Applications are always started through
   ladish to have the restored runtime environment closer to one existed
   before project save.
 * Distributed studio - network connected computers. Netjack
   configuration is part of the studio and thus is saved/restored.
 * Collaborate with the X11 window manager so window properties like
   window position, virtual desktop and screen (multimonitor) are
   saved/restored.

[1] https://kx.studio/
[2] https://kx.studio/Applications:Claudia
[3] https://kx.studio/Applications:Claudia-Launcher
[4] https://kx.studio/Applications:Cadence
